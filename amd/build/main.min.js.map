{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/str',\n], function($, Ajax, Notification, Templates, Str) {\n    return {\n        init: function(courseID, inviteBody, roles, remaining) {\n            this.courseID = courseID;\n            this.inviteBody = inviteBody;\n            this.roles = roles;\n            this.remaining = remaining;\n            this.invites = [];\n\n            this.inviteModal = null;\n            this.addSuccess = null;\n            this.addError = null;\n\n            if (document.readyState === 'loading') {\n                document.addEventListener('DOMContentLoaded', this.addInviteListener.bind(this));\n            } else {\n                this.addInviteListener();\n            }\n        },\n        addInviteListener: function() {\n            let that = this;\n\n            document.addEventListener('shareModalLoaded', function() {\n                let inviteUsers = document.getElementById('openInviteUsers');\n\n                // Prevent default action and show modal.\n                inviteUsers.addEventListener('click', (event) => {\n                    event.preventDefault();\n                    that.showModal();\n                });\n            });\n        },\n        showModal: function() {\n            // Check if the modal already exists\n            let existingModal = document.getElementById('inviteModal');\n            if (existingModal) {\n                $('#inviteModal').modal('show');\n                document.querySelector('.modal-backdrop:last-of-type').setAttribute('style', 'z-index: 1060;');\n                return;\n            }\n\n            // Prepare the context data for the template\n            const context = {\n                courseID: this.courseID,\n                inviteBody: this.inviteBody,\n            };\n\n            Templates.render('local_invites/modal', context).done(function(html, js) {\n                // Append the modal to the body\n                document.body.insertAdjacentHTML('beforeend', html);\n                Templates.runTemplateJS(js);\n                $('#inviteModal').modal('show');\n                document.querySelector('.modal-backdrop:last-of-type').setAttribute('style', 'z-index: 1060;');\n\n                // Add modal event listeners\n                this.addModalListeners();\n            }.bind(this))\n            .fail(Notification.exception);\n        },\n        addModalListeners: function() {\n            this.inviteModal = document.getElementById('inviteModal');\n            this.addSuccess = this.inviteModal.querySelector('#addSuccess');\n            this.addError = this.inviteModal.querySelector('#addError');\n\n            let that = this;\n            let userEmails = this.inviteModal.querySelector('#userEmails');\n            let addUser = this.inviteModal.querySelector('#addUser');\n            let userList = this.inviteModal.querySelector('#userList');\n            let inviteUsers = this.inviteModal.querySelector('#inviteUsers');\n\n            // Check if input is empty to enable/disable add user button\n            userEmails.addEventListener('input', function() {\n                let currentRemaining = this.remaining - that.invites.length;\n\n                // Enable/disable the add user button\n                addUser.disabled = false;\n                if (currentRemaining > 0) {\n                    if (userEmails.value.trim() === '') {\n                        addUser.disabled = true;\n                    }\n                }\n            });\n\n            // Click add user button\n            addUser.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                Ajax.call([{\n                    methodname: 'local_invites_check_email',\n                    args: {\n                        courseid: that.courseID,\n                        emails: userEmails.value\n                    },\n                    done: function(data) {\n                        data.valid.forEach(result => {\n                            if (that.invites.indexOf(result.email) == -1) {\n                                // Prepare the context data for the template\n                                const context = {\n                                    email: result.email,\n                                    name: result.name,\n                                    roles: that.roles,\n                                };\n\n                                Templates\n                                .render('local_invites/userinvite', context)\n                                .done(\n                                    function(newUser) {\n                                        // Append the user to the list\n                                        that.invites.push(result.email);\n                                        userList.appendChild(document.createRange().createContextualFragment(newUser));\n                                        that.updateStatus();\n\n                                        // Add event listener to remove the user\n                                        let userElement = userList.querySelector('li:last-child .delete-icon');\n                                        userElement.addEventListener('click', function() {\n                                            that.invites = that.invites.filter(e => e !== result.email);\n                                            that.updateStatus();\n                                            this.closest('li').remove();\n                                        });\n                                    }.bind(this)\n                                )\n                                .fail(Notification.exception);\n                            }\n                        });\n\n                        // Notify about results\n                        if (data.valid.length > 0) {\n                            Str.get_string('validmessage', 'local_invites', data.valid.length)\n                            .done(function(message) {\n                                this.addSuccess.innerHTML = message;\n                                this.addSuccess.classList.remove('hidden');\n                                setTimeout(function() {\n                                    this.addSuccess.innerHTML = '';\n                                    this.addSuccess.classList.add('hidden');\n                                }.bind(this), 3000);\n                            })\n                            .fail(Notification.exception);\n                        }\n                        if (data.invalid.length > 0) {\n                            Str.get_string('invalidmessage', 'local_invites', data.invalid.map(e => e.email).join(', '))\n                            .done(function(message) {\n                                this.addError.innerHTML = message;\n                                this.addError.classList.remove('hidden');\n                                setTimeout(function() {\n                                    this.addError.innerHTML = '';\n                                    this.addError.classList.add('hidden');\n                                }.bind(this), 3000);\n                            })\n                            .fail(Notification.exception);\n                        }\n\n                        // Clear the input\n                        userEmails.value = '';\n                        userEmails.dispatchEvent(new Event('input'));\n\n                        that.updateStatus();\n                    }.bind(this),\n                    fail: Notification.exception\n                }]);\n            });\n\n            // Click send invites button\n            inviteUsers.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let invitations = [];\n                let users = userList.querySelectorAll('li');\n                users.forEach(user => {\n                    let email = user.getAttribute('data-email');\n                    let roleid = user.querySelector('select').value;\n                    invitations.push({email: email, roleid: parseInt(roleid, 10)});\n                });\n\n                Ajax.call([{\n                    methodname: 'local_invites_send_invites',\n                    args: {\n                        courseid: that.courseID,\n                        invitations: invitations,\n                        message: that.inviteModal.querySelector('#inviteMessage').value,\n                    },\n                    done: function(data) {\n                        if (data.success) {\n                            Str.get_string('invitationssent', 'local_invites')\n                            .done(function(message) {\n                                this.addSuccess.innerHTML = message;\n                                this.addSuccess.classList.remove('hidden');\n                                setTimeout(function() {\n                                    this.addSuccess.innerHTML = '';\n                                    this.addSuccess.classList.add('hidden');\n\n                                    // Empty the user list and reset the invites array\n                                    userList.innerHTML = '';\n                                    that.invites = [];\n\n                                    // Close the modal\n                                    $('#inviteModal').modal('hide');\n                                    that.updateStatus();\n                                }.bind(this), 3000);\n                            })\n                            .fail(Notification.exception);\n                        } else {\n                            this.addError.innerHTML = data.message;\n                            this.addError.classList.remove('hidden');\n                            setTimeout(function() {\n                                this.addError.innerHTML = '';\n                                this.addError.classList.add('hidden');\n                            }.bind(this), 3000);\n                        }\n\n                        that.updateStatus();\n                    }.bind(this),\n                    fail: Notification.exception\n                }]);\n            });\n\n            that.updateStatus();\n        },\n        updateStatus: function() {\n            let remainingInvites = this.inviteModal.querySelector('.remaining-invites');\n            let inviteDetails = this.inviteModal.querySelector('#inviteDetails');\n            let inviteUsers = this.inviteModal.querySelector('#inviteUsers');\n            let addUser = this.inviteModal.querySelector('#addUser');\n\n            let invites = this.invites.length;\n            let currentRemaining = this.remaining - invites;\n\n            // Update the remaining invites message\n            Str.get_string('remaininginvites', 'local_invites', currentRemaining)\n            .done(function(message) {\n                remainingInvites.innerHTML = message;\n            })\n            .fail(Notification.exception);\n\n            // Enable/disable the add user button\n            if (currentRemaining == 0) {\n                addUser.disabled = true;\n            } else {\n                addUser.disabled = false;\n            }\n\n            // Show/hide the invite details and invite users button\n            if (invites === 0) {\n                inviteDetails.classList.add('hidden');\n                inviteUsers.disabled = true;\n            } else {\n                inviteDetails.classList.remove('hidden');\n                inviteUsers.disabled = false;\n            }\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","Templates","Str","init","courseID","inviteBody","roles","remaining","this","invites","inviteModal","addSuccess","addError","document","readyState","addEventListener","addInviteListener","bind","that","getElementById","event","preventDefault","showModal","modal","querySelector","setAttribute","context","render","done","html","js","body","insertAdjacentHTML","runTemplateJS","addModalListeners","fail","exception","userEmails","addUser","userList","inviteUsers","currentRemaining","length","disabled","value","trim","call","methodname","args","courseid","emails","data","valid","forEach","result","indexOf","email","name","newUser","push","appendChild","createRange","createContextualFragment","updateStatus","filter","e","closest","remove","get_string","message","innerHTML","classList","setTimeout","add","invalid","map","join","dispatchEvent","Event","invitations","querySelectorAll","user","getAttribute","roleid","parseInt","success","remainingInvites","inviteDetails"],"mappings":"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"}